name: Release CI
on:
  pull_request:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    name: Build release assets
    runs-on: ${{ matrix.config.os }}
    permissions:
      # needed to upload artifacts to a GH release
      contents: write
    strategy:
      matrix:
        config:
          - {
              os: "ubuntu-20.04",
              arch: "amd64",
              extraArgs: "--features openssl/vendored",
              binExtension: "",
              target: "",
              targetDir: "target/release",
            }
          - {
              os: "ubuntu-20.04",
              arch: "aarch64",
              binExtension: "",
              extraArgs: "--features openssl/vendored --target aarch64-unknown-linux-gnu",
              target: "aarch64-unknown-linux-gnu",
              targetDir: "target/aarch64-unknown-linux-gnu/release",
            }
          - {
              os: "macos-latest",
              arch: "amd64",
              binExtension: "",
              extraArgs: "",
              target: "",
              targetDir: "target/release",
            }
          - {
              os: "macos-latest",
              arch: "aarch64",
              binExtension: "",
              extraArgs: "--target aarch64-apple-darwin",
              target: "aarch64-apple-darwin",
              targetDir: "target/aarch64-apple-darwin/release/",
            }
          - {
              os: "windows-latest",
              arch: "amd64",
              binExtension: ".exe",
              extraArgs: "",
              target: "",
              targetDir: "target/release",
            }
    steps:
      - uses: actions/checkout@v3
      - name: Set the Release version 
        if: startsWith(github.ref, 'refs/tags/v')
        shell: bash
        run: echo "RELEASE_VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV
      - name: lowercase the runner OS name
        shell: bash
        run: |
          OS=$(echo "${{ runner.os }}" | tr '[:upper:]' '[:lower:]')
          echo "RUNNER_OS=$OS" >> $GITHUB_ENV
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.68
          default: true
          target: ${{ matrix.config.target }}
      - name: setup for cross-compiled linux aarch64 build
        if: matrix.config.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt update
          sudo apt install gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
          echo '[target.aarch64-unknown-linux-gnu]' >> ${HOME}/.cargo/config.toml
          echo 'linker = "aarch64-linux-gnu-gcc"' >> ${HOME}/.cargo/config.toml

      - name: build release
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: "--all-features --release ${{ matrix.config.extraArgs }}"

      - name: Package release assets
        if: runner.os != 'Windows'
        shell: bash
        run: |
          mkdir _dist
          cp ${{ matrix.config.targetDir }}/check-for-update${{ matrix.config.binExtension }} _dist/
          cp LICENSE _dist/check-for-update.license
          cd _dist
          tar czf \
            check-for-update-${{ env.RELEASE_VERSION }}-${{ env.RUNNER_OS }}-${{ matrix.config.arch }}.tar.gz \
            check-for-update.license \
            check-for-update${{ matrix.config.binExtension }}
  
      - name: (Windows) Package release assets
        if: runner.os == 'Windows'
        shell: bash
        run: |
          mkdir _dist
          cp ${{ matrix.config.targetDir }}/check-for-update${{ matrix.config.binExtension }} _dist/
          cp LICENSE _dist/check-for-update.license
          cd _dist
          7z a -tgzip \
            check-for-update-${{ env.RELEASE_VERSION }}-${{ env.RUNNER_OS }}-${{ matrix.config.arch }}.tar.gz \
            check-for-update.license \
            check-for-update${{ matrix.config.binExtension }}
  
      - name: Upload binary as GitHub artifact
        uses: actions/upload-artifact@v3
        with:
          name: check-for-update
          path: _dist/check-for-update-${{ env.RELEASE_VERSION }}-${{ env.RUNNER_OS }}-${{ matrix.config.arch }}.tar.gz

      - name: Upload binary to Github release
        if: startsWith(github.ref, 'refs/tags/v') 
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: _dist/check-for-update-${{ env.RELEASE_VERSION }}-${{ env.RUNNER_OS }}-${{ matrix.config.arch }}.tar.gz
          tag: ${{ github.ref }}

  checksums:
    name: Generate release checksums
    runs-on: ubuntu-latest
    permissions:
      # needed to upload artifacts to a GH release
      contents: write
    needs: build
    steps:
      - name: Set the release version (tag)
        if: startsWith(github.ref, 'refs/tags/v')
        shell: bash
        run: echo "RELEASE_VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV

      - name: Download release assets
        uses: actions/download-artifact@v3
        with:
          name: check-for-update

      - name: Generate checksums
        run: sha256sum * > checksums-${{ env.RELEASE_VERSION }}.txt

      - uses: actions/upload-artifact@v3
        with:
          name: check-for-update
          path: checksums-${{ env.RELEASE_VERSION }}.txt

      - name: Upload checksums to Github release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: checksums-${{ env.RELEASE_VERSION }}.txt
          tag: ${{ github.ref }}
